plugins {
    id 'org.springframework.boot' version '2.5.12'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java-library'
    id 'maven-publish'
}

bootJar.enabled = false
jar.enabled = false

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/"}
}

ext {
    mapStructVersion = "1.4.2.Final"
    lombokVersion = "1.18.22"
    lombokMapstructBindingVersion = "0.2.0"
    commonsCollectionsVersion = "4.4"
    junitJupiterParamsVersion = "5.6.2"
    mockitoVersion = "3.5.13"
    mockWebServerVersion = "4.9.3"
}

allprojects {
    group = 'com.study.hj'
    version = '1.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'

    sourceCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-configuration-processor"
        implementation "org.mapstruct:mapstruct:${mapStructVersion}"
        implementation "org.projectlombok:lombok:${lombokVersion}"
        implementation "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
        implementation "mysql:mysql-connector-java"
        implementation "org.springframework.boot:spring-boot-starter-data-jpa"

        testImplementation "org.junit.jupiter:junit-jupiter-engine"
        testImplementation "org.junit.jupiter:junit-jupiter-api"
        testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterParamsVersion}"
        testImplementation "org.mockito:mockito-junit-jupiter"
        testImplementation "org.mockito:mockito-core:${mockitoVersion}"
        testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
        testImplementation ("org.springframework.boot:spring-boot-starter-test") {
            exclude group: "org.junit.vintage", module: "junit-vintage-engine"
            exclude module: "junit"
        }

        annotationProcessor(
                "org.springframework.boot:spring-boot-configuration-processor",
                "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}",
                "org.mapstruct:mapstruct-processor:${mapStructVersion}",
                "org.projectlombok:lombok:${lombokVersion}"
        )
    }

    test {
        useJUnitPlatform()
    }

    compileJava {
        options.compilerArgs += ['-Amapstruct.unmappedTargetPolicy=IGNORE']
    }

    clean {
        delete file('src/main/generated')
    }
}

project(':study-hj-domain') {
    apply plugin: 'maven-publish'

    bootJar.enabled = false
    jar.enabled = true

    dependencies {
        api "com.fasterxml.jackson.core:jackson-databind"
        api "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
        api "commons-lang:commons-lang:2.6"
        api "org.apache.commons:commons-collections4:4.4"
    }
}

project(':study-hj-app-web') {
    dependencies {
        implementation project(':study-hj-domain')

        implementation "org.springframework.boot:spring-boot-starter-web"
        implementation "org.springframework.boot:spring-boot-starter-validation"
        implementation "org.springframework.boot:spring-boot-starter-actuator"
        implementation "io.springfox:springfox-boot-starter:3.0.0"
        implementation "io.springfox:springfox-swagger-ui:3.0.0"

        implementation "ch.qos.logback:logback-classic:1.2.9"
        implementation "net.logstash.logback:logstash-logback-encoder:6.6"

    }
}
